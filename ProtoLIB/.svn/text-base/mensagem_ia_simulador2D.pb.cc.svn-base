// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mensagem_ia_simulador2D.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PacotePathPlanning_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PacotePathPlanning_reflection_ = NULL;
const ::google::protobuf::Descriptor* PacoteRoboIA_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PacoteRoboIA_reflection_ = NULL;
const ::google::protobuf::Descriptor* PacoteIASimulador2D_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PacoteIASimulador2D_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PacoteIASimulador2D_CorEquipe_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PacoteIASimulador2D_LadoCampo_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_mensagem_5fia_5fsimulador2D_2eproto() {
  protobuf_AddDesc_mensagem_5fia_5fsimulador2D_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mensagem_ia_simulador2D.proto");
  GOOGLE_CHECK(file != NULL);
  PacotePathPlanning_descriptor_ = file->message_type(0);
  static const int PacotePathPlanning_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacotePathPlanning, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacotePathPlanning, y_),
  };
  PacotePathPlanning_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PacotePathPlanning_descriptor_,
      PacotePathPlanning::default_instance_,
      PacotePathPlanning_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacotePathPlanning, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacotePathPlanning, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PacotePathPlanning));
  PacoteRoboIA_descriptor_ = file->message_type(1);
  static const int PacoteRoboIA_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, velx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, vely_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, orientation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, skill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, tatica_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, informacoessensorias_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, alvox_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, alvoy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, pathplanning_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, vel_ang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, chute_baixo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, chute_alto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, drible_ligado_),
  };
  PacoteRoboIA_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PacoteRoboIA_descriptor_,
      PacoteRoboIA::default_instance_,
      PacoteRoboIA_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRoboIA, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PacoteRoboIA));
  PacoteIASimulador2D_descriptor_ = file->message_type(2);
  static const int PacoteIASimulador2D_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, bola_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, dadosestados_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, jogada_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, fatosdomundo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, robos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, robosadv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, corequipe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, ladocampo_),
  };
  PacoteIASimulador2D_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PacoteIASimulador2D_descriptor_,
      PacoteIASimulador2D::default_instance_,
      PacoteIASimulador2D_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteIASimulador2D, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PacoteIASimulador2D));
  PacoteIASimulador2D_CorEquipe_descriptor_ = PacoteIASimulador2D_descriptor_->enum_type(0);
  PacoteIASimulador2D_LadoCampo_descriptor_ = PacoteIASimulador2D_descriptor_->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mensagem_5fia_5fsimulador2D_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PacotePathPlanning_descriptor_, &PacotePathPlanning::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PacoteRoboIA_descriptor_, &PacoteRoboIA::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PacoteIASimulador2D_descriptor_, &PacoteIASimulador2D::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mensagem_5fia_5fsimulador2D_2eproto() {
  delete PacotePathPlanning::default_instance_;
  delete PacotePathPlanning_reflection_;
  delete PacoteRoboIA::default_instance_;
  delete PacoteRoboIA_reflection_;
  delete PacoteIASimulador2D::default_instance_;
  delete PacoteIASimulador2D_reflection_;
}

void protobuf_AddDesc_mensagem_5fia_5fsimulador2D_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_messages_5frobocup_5fssl_5freferee_2eproto();
  ::protobuf_AddDesc_mensagem_5fgerente_5fvisao_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035mensagem_ia_simulador2D.proto\032\"message"
    "s_robocup_ssl_referee.proto\032\034mensagem_ge"
    "rente_visao.proto\"*\n\022PacotePathPlanning\022"
    "\t\n\001x\030\001 \003(\002\022\t\n\001y\030\002 \003(\002\"\270\002\n\014PacoteRoboIA\022\n"
    "\n\002id\030\001 \001(\r\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\022\014\n\004velX"
    "\030\004 \001(\002\022\014\n\004velY\030\005 \001(\002\022\023\n\013orientation\030\006 \001("
    "\002\022\r\n\005skill\030\007 \001(\t\022\016\n\006tatica\030\010 \001(\t\022\034\n\024info"
    "rmacoesSensorias\030\t \003(\t\022\r\n\005alvoX\030\n \001(\002\022\r\n"
    "\005alvoY\030\013 \001(\002\022)\n\014pathPlanning\030\014 \001(\0132\023.Pac"
    "otePathPlanning\022\017\n\007vel_ang\030\r \001(\002\022\023\n\013chut"
    "e_baixo\030\016 \001(\002\022\022\n\nchute_alto\030\017 \001(\002\022\025\n\rdri"
    "ble_ligado\030\020 \001(\002\"\351\002\n\023PacoteIASimulador2D"
    "\022\031\n\004bola\030\001 \001(\0132\013.PacoteBola\022\"\n\014dadosEsta"
    "dos\030\002 \001(\0132\014.SSL_Referee\022\016\n\006jogada\030\003 \001(\t\022"
    "\024\n\014fatosDoMundo\030\004 \003(\t\022\034\n\005robos\030\005 \003(\0132\r.P"
    "acoteRoboIA\022\035\n\010robosAdv\030\006 \003(\0132\013.PacoteRo"
    "bo\0221\n\tcorEquipe\030\007 \002(\0162\036.PacoteIASimulado"
    "r2D.CorEquipe\0221\n\tladoCampo\030\010 \001(\0162\036.Pacot"
    "eIASimulador2D.LadoCampo\"\"\n\tCorEquipe\022\013\n"
    "\007AMARELO\020\000\022\010\n\004AZUL\020\001\"&\n\tLadoCampo\022\014\n\010ESQ"
    "UERDO\020\000\022\013\n\007DIREITO\020\001", 820);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mensagem_ia_simulador2D.proto", &protobuf_RegisterTypes);
  PacotePathPlanning::default_instance_ = new PacotePathPlanning();
  PacoteRoboIA::default_instance_ = new PacoteRoboIA();
  PacoteIASimulador2D::default_instance_ = new PacoteIASimulador2D();
  PacotePathPlanning::default_instance_->InitAsDefaultInstance();
  PacoteRoboIA::default_instance_->InitAsDefaultInstance();
  PacoteIASimulador2D::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mensagem_5fia_5fsimulador2D_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mensagem_5fia_5fsimulador2D_2eproto {
  StaticDescriptorInitializer_mensagem_5fia_5fsimulador2D_2eproto() {
    protobuf_AddDesc_mensagem_5fia_5fsimulador2D_2eproto();
  }
} static_descriptor_initializer_mensagem_5fia_5fsimulador2D_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int PacotePathPlanning::kXFieldNumber;
const int PacotePathPlanning::kYFieldNumber;
#endif  // !_MSC_VER

PacotePathPlanning::PacotePathPlanning()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PacotePathPlanning::InitAsDefaultInstance() {
}

PacotePathPlanning::PacotePathPlanning(const PacotePathPlanning& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PacotePathPlanning::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PacotePathPlanning::~PacotePathPlanning() {
  SharedDtor();
}

void PacotePathPlanning::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PacotePathPlanning::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PacotePathPlanning::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacotePathPlanning_descriptor_;
}

const PacotePathPlanning& PacotePathPlanning::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mensagem_5fia_5fsimulador2D_2eproto();  return *default_instance_;
}

PacotePathPlanning* PacotePathPlanning::default_instance_ = NULL;

PacotePathPlanning* PacotePathPlanning::New() const {
  return new PacotePathPlanning;
}

void PacotePathPlanning::Clear() {
  x_.Clear();
  y_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PacotePathPlanning::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float x = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13, input, this->mutable_x())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_x())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(13)) goto parse_x;
        if (input->ExpectTag(21)) goto parse_y;
        break;
      }
      
      // repeated float y = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 21, input, this->mutable_y())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_y())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(21)) goto parse_y;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PacotePathPlanning::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated float x = 1;
  for (int i = 0; i < this->x_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->x(i), output);
  }
  
  // repeated float y = 2;
  for (int i = 0; i < this->y_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      2, this->y(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PacotePathPlanning::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated float x = 1;
  for (int i = 0; i < this->x_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(1, this->x(i), target);
  }
  
  // repeated float y = 2;
  for (int i = 0; i < this->y_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(2, this->y(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PacotePathPlanning::ByteSize() const {
  int total_size = 0;
  
  // repeated float x = 1;
  {
    int data_size = 0;
    data_size = 4 * this->x_size();
    total_size += 1 * this->x_size() + data_size;
  }
  
  // repeated float y = 2;
  {
    int data_size = 0;
    data_size = 4 * this->y_size();
    total_size += 1 * this->y_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PacotePathPlanning::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PacotePathPlanning* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PacotePathPlanning*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PacotePathPlanning::MergeFrom(const PacotePathPlanning& from) {
  GOOGLE_CHECK_NE(&from, this);
  x_.MergeFrom(from.x_);
  y_.MergeFrom(from.y_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PacotePathPlanning::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacotePathPlanning::CopyFrom(const PacotePathPlanning& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacotePathPlanning::IsInitialized() const {
  
  return true;
}

void PacotePathPlanning::Swap(PacotePathPlanning* other) {
  if (other != this) {
    x_.Swap(&other->x_);
    y_.Swap(&other->y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PacotePathPlanning::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PacotePathPlanning_descriptor_;
  metadata.reflection = PacotePathPlanning_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PacoteRoboIA::kIdFieldNumber;
const int PacoteRoboIA::kXFieldNumber;
const int PacoteRoboIA::kYFieldNumber;
const int PacoteRoboIA::kVelXFieldNumber;
const int PacoteRoboIA::kVelYFieldNumber;
const int PacoteRoboIA::kOrientationFieldNumber;
const int PacoteRoboIA::kSkillFieldNumber;
const int PacoteRoboIA::kTaticaFieldNumber;
const int PacoteRoboIA::kInformacoesSensoriasFieldNumber;
const int PacoteRoboIA::kAlvoXFieldNumber;
const int PacoteRoboIA::kAlvoYFieldNumber;
const int PacoteRoboIA::kPathPlanningFieldNumber;
const int PacoteRoboIA::kVelAngFieldNumber;
const int PacoteRoboIA::kChuteBaixoFieldNumber;
const int PacoteRoboIA::kChuteAltoFieldNumber;
const int PacoteRoboIA::kDribleLigadoFieldNumber;
#endif  // !_MSC_VER

PacoteRoboIA::PacoteRoboIA()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PacoteRoboIA::InitAsDefaultInstance() {
  pathplanning_ = const_cast< ::PacotePathPlanning*>(&::PacotePathPlanning::default_instance());
}

PacoteRoboIA::PacoteRoboIA(const PacoteRoboIA& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PacoteRoboIA::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  x_ = 0;
  y_ = 0;
  velx_ = 0;
  vely_ = 0;
  orientation_ = 0;
  skill_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  tatica_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  alvox_ = 0;
  alvoy_ = 0;
  pathplanning_ = NULL;
  vel_ang_ = 0;
  chute_baixo_ = 0;
  chute_alto_ = 0;
  drible_ligado_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PacoteRoboIA::~PacoteRoboIA() {
  SharedDtor();
}

void PacoteRoboIA::SharedDtor() {
  if (skill_ != &::google::protobuf::internal::kEmptyString) {
    delete skill_;
  }
  if (tatica_ != &::google::protobuf::internal::kEmptyString) {
    delete tatica_;
  }
  if (this != default_instance_) {
    delete pathplanning_;
  }
}

void PacoteRoboIA::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PacoteRoboIA::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacoteRoboIA_descriptor_;
}

const PacoteRoboIA& PacoteRoboIA::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mensagem_5fia_5fsimulador2D_2eproto();  return *default_instance_;
}

PacoteRoboIA* PacoteRoboIA::default_instance_ = NULL;

PacoteRoboIA* PacoteRoboIA::New() const {
  return new PacoteRoboIA;
}

void PacoteRoboIA::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    x_ = 0;
    y_ = 0;
    velx_ = 0;
    vely_ = 0;
    orientation_ = 0;
    if (has_skill()) {
      if (skill_ != &::google::protobuf::internal::kEmptyString) {
        skill_->clear();
      }
    }
    if (has_tatica()) {
      if (tatica_ != &::google::protobuf::internal::kEmptyString) {
        tatica_->clear();
      }
    }
  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    alvox_ = 0;
    alvoy_ = 0;
    if (has_pathplanning()) {
      if (pathplanning_ != NULL) pathplanning_->::PacotePathPlanning::Clear();
    }
    vel_ang_ = 0;
    chute_baixo_ = 0;
    chute_alto_ = 0;
    drible_ligado_ = 0;
  }
  informacoessensorias_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PacoteRoboIA::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(21)) goto parse_x;
        break;
      }
      
      // optional float x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_y;
        break;
      }
      
      // optional float y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(37)) goto parse_velX;
        break;
      }
      
      // optional float velX = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_velX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &velx_)));
          set_has_velx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(45)) goto parse_velY;
        break;
      }
      
      // optional float velY = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_velY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vely_)));
          set_has_vely();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(53)) goto parse_orientation;
        break;
      }
      
      // optional float orientation = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_orientation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &orientation_)));
          set_has_orientation();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_skill;
        break;
      }
      
      // optional string skill = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skill()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->skill().data(), this->skill().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_tatica;
        break;
      }
      
      // optional string tatica = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tatica:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tatica()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->tatica().data(), this->tatica().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_informacoesSensorias;
        break;
      }
      
      // repeated string informacoesSensorias = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_informacoesSensorias:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_informacoessensorias()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->informacoessensorias(0).data(), this->informacoessensorias(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_informacoesSensorias;
        if (input->ExpectTag(85)) goto parse_alvoX;
        break;
      }
      
      // optional float alvoX = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_alvoX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &alvox_)));
          set_has_alvox();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(93)) goto parse_alvoY;
        break;
      }
      
      // optional float alvoY = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_alvoY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &alvoy_)));
          set_has_alvoy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_pathPlanning;
        break;
      }
      
      // optional .PacotePathPlanning pathPlanning = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pathPlanning:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pathplanning()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(109)) goto parse_vel_ang;
        break;
      }
      
      // optional float vel_ang = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_vel_ang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vel_ang_)));
          set_has_vel_ang();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(117)) goto parse_chute_baixo;
        break;
      }
      
      // optional float chute_baixo = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_chute_baixo:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &chute_baixo_)));
          set_has_chute_baixo();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(125)) goto parse_chute_alto;
        break;
      }
      
      // optional float chute_alto = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_chute_alto:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &chute_alto_)));
          set_has_chute_alto();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(133)) goto parse_drible_ligado;
        break;
      }
      
      // optional float drible_ligado = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_drible_ligado:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &drible_ligado_)));
          set_has_drible_ligado();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PacoteRoboIA::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }
  
  // optional float x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }
  
  // optional float y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }
  
  // optional float velX = 4;
  if (has_velx()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->velx(), output);
  }
  
  // optional float velY = 5;
  if (has_vely()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->vely(), output);
  }
  
  // optional float orientation = 6;
  if (has_orientation()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->orientation(), output);
  }
  
  // optional string skill = 7;
  if (has_skill()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skill().data(), this->skill().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->skill(), output);
  }
  
  // optional string tatica = 8;
  if (has_tatica()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tatica().data(), this->tatica().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->tatica(), output);
  }
  
  // repeated string informacoesSensorias = 9;
  for (int i = 0; i < this->informacoessensorias_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->informacoessensorias(i).data(), this->informacoessensorias(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->informacoessensorias(i), output);
  }
  
  // optional float alvoX = 10;
  if (has_alvox()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->alvox(), output);
  }
  
  // optional float alvoY = 11;
  if (has_alvoy()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->alvoy(), output);
  }
  
  // optional .PacotePathPlanning pathPlanning = 12;
  if (has_pathplanning()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->pathplanning(), output);
  }
  
  // optional float vel_ang = 13;
  if (has_vel_ang()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->vel_ang(), output);
  }
  
  // optional float chute_baixo = 14;
  if (has_chute_baixo()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->chute_baixo(), output);
  }
  
  // optional float chute_alto = 15;
  if (has_chute_alto()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->chute_alto(), output);
  }
  
  // optional float drible_ligado = 16;
  if (has_drible_ligado()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->drible_ligado(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PacoteRoboIA::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }
  
  // optional float x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }
  
  // optional float y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }
  
  // optional float velX = 4;
  if (has_velx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->velx(), target);
  }
  
  // optional float velY = 5;
  if (has_vely()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->vely(), target);
  }
  
  // optional float orientation = 6;
  if (has_orientation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->orientation(), target);
  }
  
  // optional string skill = 7;
  if (has_skill()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->skill().data(), this->skill().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->skill(), target);
  }
  
  // optional string tatica = 8;
  if (has_tatica()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->tatica().data(), this->tatica().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->tatica(), target);
  }
  
  // repeated string informacoesSensorias = 9;
  for (int i = 0; i < this->informacoessensorias_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->informacoessensorias(i).data(), this->informacoessensorias(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->informacoessensorias(i), target);
  }
  
  // optional float alvoX = 10;
  if (has_alvox()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->alvox(), target);
  }
  
  // optional float alvoY = 11;
  if (has_alvoy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->alvoy(), target);
  }
  
  // optional .PacotePathPlanning pathPlanning = 12;
  if (has_pathplanning()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->pathplanning(), target);
  }
  
  // optional float vel_ang = 13;
  if (has_vel_ang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->vel_ang(), target);
  }
  
  // optional float chute_baixo = 14;
  if (has_chute_baixo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->chute_baixo(), target);
  }
  
  // optional float chute_alto = 15;
  if (has_chute_alto()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->chute_alto(), target);
  }
  
  // optional float drible_ligado = 16;
  if (has_drible_ligado()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->drible_ligado(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PacoteRoboIA::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }
    
    // optional float x = 2;
    if (has_x()) {
      total_size += 1 + 4;
    }
    
    // optional float y = 3;
    if (has_y()) {
      total_size += 1 + 4;
    }
    
    // optional float velX = 4;
    if (has_velx()) {
      total_size += 1 + 4;
    }
    
    // optional float velY = 5;
    if (has_vely()) {
      total_size += 1 + 4;
    }
    
    // optional float orientation = 6;
    if (has_orientation()) {
      total_size += 1 + 4;
    }
    
    // optional string skill = 7;
    if (has_skill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->skill());
    }
    
    // optional string tatica = 8;
    if (has_tatica()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tatica());
    }
    
  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // optional float alvoX = 10;
    if (has_alvox()) {
      total_size += 1 + 4;
    }
    
    // optional float alvoY = 11;
    if (has_alvoy()) {
      total_size += 1 + 4;
    }
    
    // optional .PacotePathPlanning pathPlanning = 12;
    if (has_pathplanning()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pathplanning());
    }
    
    // optional float vel_ang = 13;
    if (has_vel_ang()) {
      total_size += 1 + 4;
    }
    
    // optional float chute_baixo = 14;
    if (has_chute_baixo()) {
      total_size += 1 + 4;
    }
    
    // optional float chute_alto = 15;
    if (has_chute_alto()) {
      total_size += 1 + 4;
    }
    
    // optional float drible_ligado = 16;
    if (has_drible_ligado()) {
      total_size += 2 + 4;
    }
    
  }
  // repeated string informacoesSensorias = 9;
  total_size += 1 * this->informacoessensorias_size();
  for (int i = 0; i < this->informacoessensorias_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->informacoessensorias(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PacoteRoboIA::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PacoteRoboIA* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PacoteRoboIA*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PacoteRoboIA::MergeFrom(const PacoteRoboIA& from) {
  GOOGLE_CHECK_NE(&from, this);
  informacoessensorias_.MergeFrom(from.informacoessensorias_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_velx()) {
      set_velx(from.velx());
    }
    if (from.has_vely()) {
      set_vely(from.vely());
    }
    if (from.has_orientation()) {
      set_orientation(from.orientation());
    }
    if (from.has_skill()) {
      set_skill(from.skill());
    }
    if (from.has_tatica()) {
      set_tatica(from.tatica());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_alvox()) {
      set_alvox(from.alvox());
    }
    if (from.has_alvoy()) {
      set_alvoy(from.alvoy());
    }
    if (from.has_pathplanning()) {
      mutable_pathplanning()->::PacotePathPlanning::MergeFrom(from.pathplanning());
    }
    if (from.has_vel_ang()) {
      set_vel_ang(from.vel_ang());
    }
    if (from.has_chute_baixo()) {
      set_chute_baixo(from.chute_baixo());
    }
    if (from.has_chute_alto()) {
      set_chute_alto(from.chute_alto());
    }
    if (from.has_drible_ligado()) {
      set_drible_ligado(from.drible_ligado());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PacoteRoboIA::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacoteRoboIA::CopyFrom(const PacoteRoboIA& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacoteRoboIA::IsInitialized() const {
  
  return true;
}

void PacoteRoboIA::Swap(PacoteRoboIA* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(velx_, other->velx_);
    std::swap(vely_, other->vely_);
    std::swap(orientation_, other->orientation_);
    std::swap(skill_, other->skill_);
    std::swap(tatica_, other->tatica_);
    informacoessensorias_.Swap(&other->informacoessensorias_);
    std::swap(alvox_, other->alvox_);
    std::swap(alvoy_, other->alvoy_);
    std::swap(pathplanning_, other->pathplanning_);
    std::swap(vel_ang_, other->vel_ang_);
    std::swap(chute_baixo_, other->chute_baixo_);
    std::swap(chute_alto_, other->chute_alto_);
    std::swap(drible_ligado_, other->drible_ligado_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PacoteRoboIA::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PacoteRoboIA_descriptor_;
  metadata.reflection = PacoteRoboIA_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* PacoteIASimulador2D_CorEquipe_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacoteIASimulador2D_CorEquipe_descriptor_;
}
bool PacoteIASimulador2D_CorEquipe_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PacoteIASimulador2D_CorEquipe PacoteIASimulador2D::AMARELO;
const PacoteIASimulador2D_CorEquipe PacoteIASimulador2D::AZUL;
const PacoteIASimulador2D_CorEquipe PacoteIASimulador2D::CorEquipe_MIN;
const PacoteIASimulador2D_CorEquipe PacoteIASimulador2D::CorEquipe_MAX;
const int PacoteIASimulador2D::CorEquipe_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* PacoteIASimulador2D_LadoCampo_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacoteIASimulador2D_LadoCampo_descriptor_;
}
bool PacoteIASimulador2D_LadoCampo_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PacoteIASimulador2D_LadoCampo PacoteIASimulador2D::ESQUERDO;
const PacoteIASimulador2D_LadoCampo PacoteIASimulador2D::DIREITO;
const PacoteIASimulador2D_LadoCampo PacoteIASimulador2D::LadoCampo_MIN;
const PacoteIASimulador2D_LadoCampo PacoteIASimulador2D::LadoCampo_MAX;
const int PacoteIASimulador2D::LadoCampo_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PacoteIASimulador2D::kBolaFieldNumber;
const int PacoteIASimulador2D::kDadosEstadosFieldNumber;
const int PacoteIASimulador2D::kJogadaFieldNumber;
const int PacoteIASimulador2D::kFatosDoMundoFieldNumber;
const int PacoteIASimulador2D::kRobosFieldNumber;
const int PacoteIASimulador2D::kRobosAdvFieldNumber;
const int PacoteIASimulador2D::kCorEquipeFieldNumber;
const int PacoteIASimulador2D::kLadoCampoFieldNumber;
#endif  // !_MSC_VER

PacoteIASimulador2D::PacoteIASimulador2D()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PacoteIASimulador2D::InitAsDefaultInstance() {
  bola_ = const_cast< ::PacoteBola*>(&::PacoteBola::default_instance());
  dadosestados_ = const_cast< ::SSL_Referee*>(&::SSL_Referee::default_instance());
}

PacoteIASimulador2D::PacoteIASimulador2D(const PacoteIASimulador2D& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PacoteIASimulador2D::SharedCtor() {
  _cached_size_ = 0;
  bola_ = NULL;
  dadosestados_ = NULL;
  jogada_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  corequipe_ = 0;
  ladocampo_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PacoteIASimulador2D::~PacoteIASimulador2D() {
  SharedDtor();
}

void PacoteIASimulador2D::SharedDtor() {
  if (jogada_ != &::google::protobuf::internal::kEmptyString) {
    delete jogada_;
  }
  if (this != default_instance_) {
    delete bola_;
    delete dadosestados_;
  }
}

void PacoteIASimulador2D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PacoteIASimulador2D::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacoteIASimulador2D_descriptor_;
}

const PacoteIASimulador2D& PacoteIASimulador2D::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mensagem_5fia_5fsimulador2D_2eproto();  return *default_instance_;
}

PacoteIASimulador2D* PacoteIASimulador2D::default_instance_ = NULL;

PacoteIASimulador2D* PacoteIASimulador2D::New() const {
  return new PacoteIASimulador2D;
}

void PacoteIASimulador2D::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_bola()) {
      if (bola_ != NULL) bola_->::PacoteBola::Clear();
    }
    if (has_dadosestados()) {
      if (dadosestados_ != NULL) dadosestados_->::SSL_Referee::Clear();
    }
    if (has_jogada()) {
      if (jogada_ != &::google::protobuf::internal::kEmptyString) {
        jogada_->clear();
      }
    }
    corequipe_ = 0;
    ladocampo_ = 0;
  }
  fatosdomundo_.Clear();
  robos_.Clear();
  robosadv_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PacoteIASimulador2D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PacoteBola bola = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bola()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_dadosEstados;
        break;
      }
      
      // optional .SSL_Referee dadosEstados = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dadosEstados:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dadosestados()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_jogada;
        break;
      }
      
      // optional string jogada = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_jogada:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jogada()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->jogada().data(), this->jogada().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_fatosDoMundo;
        break;
      }
      
      // repeated string fatosDoMundo = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fatosDoMundo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_fatosdomundo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fatosdomundo(0).data(), this->fatosdomundo(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_fatosDoMundo;
        if (input->ExpectTag(42)) goto parse_robos;
        break;
      }
      
      // repeated .PacoteRoboIA robos = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_robos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_robos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_robos;
        if (input->ExpectTag(50)) goto parse_robosAdv;
        break;
      }
      
      // repeated .PacoteRobo robosAdv = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_robosAdv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_robosadv()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_robosAdv;
        if (input->ExpectTag(56)) goto parse_corEquipe;
        break;
      }
      
      // required .PacoteIASimulador2D.CorEquipe corEquipe = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_corEquipe:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PacoteIASimulador2D_CorEquipe_IsValid(value)) {
            set_corequipe(static_cast< ::PacoteIASimulador2D_CorEquipe >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_ladoCampo;
        break;
      }
      
      // optional .PacoteIASimulador2D.LadoCampo ladoCampo = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ladoCampo:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PacoteIASimulador2D_LadoCampo_IsValid(value)) {
            set_ladocampo(static_cast< ::PacoteIASimulador2D_LadoCampo >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PacoteIASimulador2D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .PacoteBola bola = 1;
  if (has_bola()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bola(), output);
  }
  
  // optional .SSL_Referee dadosEstados = 2;
  if (has_dadosestados()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->dadosestados(), output);
  }
  
  // optional string jogada = 3;
  if (has_jogada()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->jogada().data(), this->jogada().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->jogada(), output);
  }
  
  // repeated string fatosDoMundo = 4;
  for (int i = 0; i < this->fatosdomundo_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->fatosdomundo(i).data(), this->fatosdomundo(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->fatosdomundo(i), output);
  }
  
  // repeated .PacoteRoboIA robos = 5;
  for (int i = 0; i < this->robos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->robos(i), output);
  }
  
  // repeated .PacoteRobo robosAdv = 6;
  for (int i = 0; i < this->robosadv_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->robosadv(i), output);
  }
  
  // required .PacoteIASimulador2D.CorEquipe corEquipe = 7;
  if (has_corequipe()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->corequipe(), output);
  }
  
  // optional .PacoteIASimulador2D.LadoCampo ladoCampo = 8;
  if (has_ladocampo()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->ladocampo(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PacoteIASimulador2D::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .PacoteBola bola = 1;
  if (has_bola()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->bola(), target);
  }
  
  // optional .SSL_Referee dadosEstados = 2;
  if (has_dadosestados()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->dadosestados(), target);
  }
  
  // optional string jogada = 3;
  if (has_jogada()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->jogada().data(), this->jogada().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->jogada(), target);
  }
  
  // repeated string fatosDoMundo = 4;
  for (int i = 0; i < this->fatosdomundo_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fatosdomundo(i).data(), this->fatosdomundo(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->fatosdomundo(i), target);
  }
  
  // repeated .PacoteRoboIA robos = 5;
  for (int i = 0; i < this->robos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->robos(i), target);
  }
  
  // repeated .PacoteRobo robosAdv = 6;
  for (int i = 0; i < this->robosadv_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->robosadv(i), target);
  }
  
  // required .PacoteIASimulador2D.CorEquipe corEquipe = 7;
  if (has_corequipe()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->corequipe(), target);
  }
  
  // optional .PacoteIASimulador2D.LadoCampo ladoCampo = 8;
  if (has_ladocampo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->ladocampo(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PacoteIASimulador2D::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PacoteBola bola = 1;
    if (has_bola()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bola());
    }
    
    // optional .SSL_Referee dadosEstados = 2;
    if (has_dadosestados()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dadosestados());
    }
    
    // optional string jogada = 3;
    if (has_jogada()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jogada());
    }
    
    // required .PacoteIASimulador2D.CorEquipe corEquipe = 7;
    if (has_corequipe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->corequipe());
    }
    
    // optional .PacoteIASimulador2D.LadoCampo ladoCampo = 8;
    if (has_ladocampo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ladocampo());
    }
    
  }
  // repeated string fatosDoMundo = 4;
  total_size += 1 * this->fatosdomundo_size();
  for (int i = 0; i < this->fatosdomundo_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->fatosdomundo(i));
  }
  
  // repeated .PacoteRoboIA robos = 5;
  total_size += 1 * this->robos_size();
  for (int i = 0; i < this->robos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->robos(i));
  }
  
  // repeated .PacoteRobo robosAdv = 6;
  total_size += 1 * this->robosadv_size();
  for (int i = 0; i < this->robosadv_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->robosadv(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PacoteIASimulador2D::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PacoteIASimulador2D* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PacoteIASimulador2D*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PacoteIASimulador2D::MergeFrom(const PacoteIASimulador2D& from) {
  GOOGLE_CHECK_NE(&from, this);
  fatosdomundo_.MergeFrom(from.fatosdomundo_);
  robos_.MergeFrom(from.robos_);
  robosadv_.MergeFrom(from.robosadv_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bola()) {
      mutable_bola()->::PacoteBola::MergeFrom(from.bola());
    }
    if (from.has_dadosestados()) {
      mutable_dadosestados()->::SSL_Referee::MergeFrom(from.dadosestados());
    }
    if (from.has_jogada()) {
      set_jogada(from.jogada());
    }
    if (from.has_corequipe()) {
      set_corequipe(from.corequipe());
    }
    if (from.has_ladocampo()) {
      set_ladocampo(from.ladocampo());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PacoteIASimulador2D::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacoteIASimulador2D::CopyFrom(const PacoteIASimulador2D& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacoteIASimulador2D::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000040) != 0x00000040) return false;
  
  if (has_bola()) {
    if (!this->bola().IsInitialized()) return false;
  }
  if (has_dadosestados()) {
    if (!this->dadosestados().IsInitialized()) return false;
  }
  for (int i = 0; i < robosadv_size(); i++) {
    if (!this->robosadv(i).IsInitialized()) return false;
  }
  return true;
}

void PacoteIASimulador2D::Swap(PacoteIASimulador2D* other) {
  if (other != this) {
    std::swap(bola_, other->bola_);
    std::swap(dadosestados_, other->dadosestados_);
    std::swap(jogada_, other->jogada_);
    fatosdomundo_.Swap(&other->fatosdomundo_);
    robos_.Swap(&other->robos_);
    robosadv_.Swap(&other->robosadv_);
    std::swap(corequipe_, other->corequipe_);
    std::swap(ladocampo_, other->ladocampo_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PacoteIASimulador2D::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PacoteIASimulador2D_descriptor_;
  metadata.reflection = PacoteIASimulador2D_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
