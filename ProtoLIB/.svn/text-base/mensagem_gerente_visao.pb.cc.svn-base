// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mensagem_gerente_visao.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PacoteBola_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PacoteBola_reflection_ = NULL;
const ::google::protobuf::Descriptor* PacoteRobo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PacoteRobo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PacoteVisao_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PacoteVisao_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_mensagem_5fgerente_5fvisao_2eproto() {
  protobuf_AddDesc_mensagem_5fgerente_5fvisao_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mensagem_gerente_visao.proto");
  GOOGLE_CHECK(file != NULL);
  PacoteBola_descriptor_ = file->message_type(0);
  static const int PacoteBola_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteBola, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteBola, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteBola, z_),
  };
  PacoteBola_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PacoteBola_descriptor_,
      PacoteBola::default_instance_,
      PacoteBola_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteBola, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteBola, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PacoteBola));
  PacoteRobo_descriptor_ = file->message_type(1);
  static const int PacoteRobo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRobo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRobo, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRobo, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRobo, orientation_),
  };
  PacoteRobo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PacoteRobo_descriptor_,
      PacoteRobo::default_instance_,
      PacoteRobo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRobo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteRobo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PacoteRobo));
  PacoteVisao_descriptor_ = file->message_type(2);
  static const int PacoteVisao_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteVisao, numeroframe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteVisao, delay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteVisao, bola_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteVisao, robosequipe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteVisao, robosadversarios_),
  };
  PacoteVisao_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PacoteVisao_descriptor_,
      PacoteVisao::default_instance_,
      PacoteVisao_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteVisao, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacoteVisao, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PacoteVisao));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mensagem_5fgerente_5fvisao_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PacoteBola_descriptor_, &PacoteBola::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PacoteRobo_descriptor_, &PacoteRobo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PacoteVisao_descriptor_, &PacoteVisao::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mensagem_5fgerente_5fvisao_2eproto() {
  delete PacoteBola::default_instance_;
  delete PacoteBola_reflection_;
  delete PacoteRobo::default_instance_;
  delete PacoteRobo_reflection_;
  delete PacoteVisao::default_instance_;
  delete PacoteVisao_reflection_;
}

void protobuf_AddDesc_mensagem_5fgerente_5fvisao_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034mensagem_gerente_visao.proto\"-\n\nPacote"
    "Bola\022\t\n\001x\030\001 \002(\002\022\t\n\001y\030\002 \002(\002\022\t\n\001z\030\003 \001(\002\"C\n"
    "\nPacoteRobo\022\n\n\002id\030\001 \002(\r\022\t\n\001x\030\002 \002(\002\022\t\n\001y\030"
    "\003 \002(\002\022\023\n\013orientation\030\004 \002(\002\"\225\001\n\013PacoteVis"
    "ao\022\023\n\013numeroFrame\030\001 \002(\r\022\r\n\005delay\030\002 \002(\001\022\031"
    "\n\004bola\030\003 \002(\0132\013.PacoteBola\022 \n\013robosEquipe"
    "\030\004 \003(\0132\013.PacoteRobo\022%\n\020robosAdversarios\030"
    "\005 \003(\0132\013.PacoteRobo", 298);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mensagem_gerente_visao.proto", &protobuf_RegisterTypes);
  PacoteBola::default_instance_ = new PacoteBola();
  PacoteRobo::default_instance_ = new PacoteRobo();
  PacoteVisao::default_instance_ = new PacoteVisao();
  PacoteBola::default_instance_->InitAsDefaultInstance();
  PacoteRobo::default_instance_->InitAsDefaultInstance();
  PacoteVisao::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mensagem_5fgerente_5fvisao_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mensagem_5fgerente_5fvisao_2eproto {
  StaticDescriptorInitializer_mensagem_5fgerente_5fvisao_2eproto() {
    protobuf_AddDesc_mensagem_5fgerente_5fvisao_2eproto();
  }
} static_descriptor_initializer_mensagem_5fgerente_5fvisao_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int PacoteBola::kXFieldNumber;
const int PacoteBola::kYFieldNumber;
const int PacoteBola::kZFieldNumber;
#endif  // !_MSC_VER

PacoteBola::PacoteBola()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PacoteBola::InitAsDefaultInstance() {
}

PacoteBola::PacoteBola(const PacoteBola& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PacoteBola::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PacoteBola::~PacoteBola() {
  SharedDtor();
}

void PacoteBola::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PacoteBola::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PacoteBola::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacoteBola_descriptor_;
}

const PacoteBola& PacoteBola::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mensagem_5fgerente_5fvisao_2eproto();  return *default_instance_;
}

PacoteBola* PacoteBola::default_instance_ = NULL;

PacoteBola* PacoteBola::New() const {
  return new PacoteBola;
}

void PacoteBola::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    x_ = 0;
    y_ = 0;
    z_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PacoteBola::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float x = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(21)) goto parse_y;
        break;
      }
      
      // required float y = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_z;
        break;
      }
      
      // optional float z = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
          set_has_z();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PacoteBola::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required float x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }
  
  // required float y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }
  
  // optional float z = 3;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PacoteBola::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required float x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }
  
  // required float y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }
  
  // optional float z = 3;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PacoteBola::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float x = 1;
    if (has_x()) {
      total_size += 1 + 4;
    }
    
    // required float y = 2;
    if (has_y()) {
      total_size += 1 + 4;
    }
    
    // optional float z = 3;
    if (has_z()) {
      total_size += 1 + 4;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PacoteBola::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PacoteBola* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PacoteBola*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PacoteBola::MergeFrom(const PacoteBola& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PacoteBola::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacoteBola::CopyFrom(const PacoteBola& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacoteBola::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void PacoteBola::Swap(PacoteBola* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(z_, other->z_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PacoteBola::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PacoteBola_descriptor_;
  metadata.reflection = PacoteBola_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PacoteRobo::kIdFieldNumber;
const int PacoteRobo::kXFieldNumber;
const int PacoteRobo::kYFieldNumber;
const int PacoteRobo::kOrientationFieldNumber;
#endif  // !_MSC_VER

PacoteRobo::PacoteRobo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PacoteRobo::InitAsDefaultInstance() {
}

PacoteRobo::PacoteRobo(const PacoteRobo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PacoteRobo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
  x_ = 0;
  y_ = 0;
  orientation_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PacoteRobo::~PacoteRobo() {
  SharedDtor();
}

void PacoteRobo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PacoteRobo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PacoteRobo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacoteRobo_descriptor_;
}

const PacoteRobo& PacoteRobo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mensagem_5fgerente_5fvisao_2eproto();  return *default_instance_;
}

PacoteRobo* PacoteRobo::default_instance_ = NULL;

PacoteRobo* PacoteRobo::New() const {
  return new PacoteRobo;
}

void PacoteRobo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0u;
    x_ = 0;
    y_ = 0;
    orientation_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PacoteRobo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(21)) goto parse_x;
        break;
      }
      
      // required float x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(29)) goto parse_y;
        break;
      }
      
      // required float y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(37)) goto parse_orientation;
        break;
      }
      
      // required float orientation = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_orientation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &orientation_)));
          set_has_orientation();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PacoteRobo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }
  
  // required float x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }
  
  // required float y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }
  
  // required float orientation = 4;
  if (has_orientation()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->orientation(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PacoteRobo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }
  
  // required float x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }
  
  // required float y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }
  
  // required float orientation = 4;
  if (has_orientation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->orientation(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PacoteRobo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }
    
    // required float x = 2;
    if (has_x()) {
      total_size += 1 + 4;
    }
    
    // required float y = 3;
    if (has_y()) {
      total_size += 1 + 4;
    }
    
    // required float orientation = 4;
    if (has_orientation()) {
      total_size += 1 + 4;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PacoteRobo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PacoteRobo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PacoteRobo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PacoteRobo::MergeFrom(const PacoteRobo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
    if (from.has_orientation()) {
      set_orientation(from.orientation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PacoteRobo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacoteRobo::CopyFrom(const PacoteRobo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacoteRobo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  
  return true;
}

void PacoteRobo::Swap(PacoteRobo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(orientation_, other->orientation_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PacoteRobo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PacoteRobo_descriptor_;
  metadata.reflection = PacoteRobo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PacoteVisao::kNumeroFrameFieldNumber;
const int PacoteVisao::kDelayFieldNumber;
const int PacoteVisao::kBolaFieldNumber;
const int PacoteVisao::kRobosEquipeFieldNumber;
const int PacoteVisao::kRobosAdversariosFieldNumber;
#endif  // !_MSC_VER

PacoteVisao::PacoteVisao()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PacoteVisao::InitAsDefaultInstance() {
  bola_ = const_cast< ::PacoteBola*>(&::PacoteBola::default_instance());
}

PacoteVisao::PacoteVisao(const PacoteVisao& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PacoteVisao::SharedCtor() {
  _cached_size_ = 0;
  numeroframe_ = 0u;
  delay_ = 0;
  bola_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PacoteVisao::~PacoteVisao() {
  SharedDtor();
}

void PacoteVisao::SharedDtor() {
  if (this != default_instance_) {
    delete bola_;
  }
}

void PacoteVisao::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PacoteVisao::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacoteVisao_descriptor_;
}

const PacoteVisao& PacoteVisao::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mensagem_5fgerente_5fvisao_2eproto();  return *default_instance_;
}

PacoteVisao* PacoteVisao::default_instance_ = NULL;

PacoteVisao* PacoteVisao::New() const {
  return new PacoteVisao;
}

void PacoteVisao::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    numeroframe_ = 0u;
    delay_ = 0;
    if (has_bola()) {
      if (bola_ != NULL) bola_->::PacoteBola::Clear();
    }
  }
  robosequipe_.Clear();
  robosadversarios_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PacoteVisao::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 numeroFrame = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &numeroframe_)));
          set_has_numeroframe();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(17)) goto parse_delay;
        break;
      }
      
      // required double delay = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_delay:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &delay_)));
          set_has_delay();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_bola;
        break;
      }
      
      // required .PacoteBola bola = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bola:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bola()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_robosEquipe;
        break;
      }
      
      // repeated .PacoteRobo robosEquipe = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_robosEquipe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_robosequipe()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_robosEquipe;
        if (input->ExpectTag(42)) goto parse_robosAdversarios;
        break;
      }
      
      // repeated .PacoteRobo robosAdversarios = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_robosAdversarios:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_robosadversarios()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_robosAdversarios;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PacoteVisao::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 numeroFrame = 1;
  if (has_numeroframe()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->numeroframe(), output);
  }
  
  // required double delay = 2;
  if (has_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->delay(), output);
  }
  
  // required .PacoteBola bola = 3;
  if (has_bola()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->bola(), output);
  }
  
  // repeated .PacoteRobo robosEquipe = 4;
  for (int i = 0; i < this->robosequipe_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->robosequipe(i), output);
  }
  
  // repeated .PacoteRobo robosAdversarios = 5;
  for (int i = 0; i < this->robosadversarios_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->robosadversarios(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PacoteVisao::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 numeroFrame = 1;
  if (has_numeroframe()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->numeroframe(), target);
  }
  
  // required double delay = 2;
  if (has_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->delay(), target);
  }
  
  // required .PacoteBola bola = 3;
  if (has_bola()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->bola(), target);
  }
  
  // repeated .PacoteRobo robosEquipe = 4;
  for (int i = 0; i < this->robosequipe_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->robosequipe(i), target);
  }
  
  // repeated .PacoteRobo robosAdversarios = 5;
  for (int i = 0; i < this->robosadversarios_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->robosadversarios(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PacoteVisao::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 numeroFrame = 1;
    if (has_numeroframe()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->numeroframe());
    }
    
    // required double delay = 2;
    if (has_delay()) {
      total_size += 1 + 8;
    }
    
    // required .PacoteBola bola = 3;
    if (has_bola()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bola());
    }
    
  }
  // repeated .PacoteRobo robosEquipe = 4;
  total_size += 1 * this->robosequipe_size();
  for (int i = 0; i < this->robosequipe_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->robosequipe(i));
  }
  
  // repeated .PacoteRobo robosAdversarios = 5;
  total_size += 1 * this->robosadversarios_size();
  for (int i = 0; i < this->robosadversarios_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->robosadversarios(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PacoteVisao::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PacoteVisao* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PacoteVisao*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PacoteVisao::MergeFrom(const PacoteVisao& from) {
  GOOGLE_CHECK_NE(&from, this);
  robosequipe_.MergeFrom(from.robosequipe_);
  robosadversarios_.MergeFrom(from.robosadversarios_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_numeroframe()) {
      set_numeroframe(from.numeroframe());
    }
    if (from.has_delay()) {
      set_delay(from.delay());
    }
    if (from.has_bola()) {
      mutable_bola()->::PacoteBola::MergeFrom(from.bola());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PacoteVisao::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacoteVisao::CopyFrom(const PacoteVisao& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacoteVisao::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  if (has_bola()) {
    if (!this->bola().IsInitialized()) return false;
  }
  for (int i = 0; i < robosequipe_size(); i++) {
    if (!this->robosequipe(i).IsInitialized()) return false;
  }
  for (int i = 0; i < robosadversarios_size(); i++) {
    if (!this->robosadversarios(i).IsInitialized()) return false;
  }
  return true;
}

void PacoteVisao::Swap(PacoteVisao* other) {
  if (other != this) {
    std::swap(numeroframe_, other->numeroframe_);
    std::swap(delay_, other->delay_);
    std::swap(bola_, other->bola_);
    robosequipe_.Swap(&other->robosequipe_);
    robosadversarios_.Swap(&other->robosadversarios_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PacoteVisao::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PacoteVisao_descriptor_;
  metadata.reflection = PacoteVisao_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
